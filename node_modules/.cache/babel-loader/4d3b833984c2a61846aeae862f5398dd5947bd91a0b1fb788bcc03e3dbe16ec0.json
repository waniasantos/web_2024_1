{"ast":null,"code":"var _jsxFileName = \"/home/wania/Documentos/web_2024_1/src/components/aulas/02FuncoesInternas/FuncoesInternas.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FuncoesInternas = () => {\n  let n1 = 10;\n  let n2 = 5;\n  function somar(x, y) {\n    return x + y;\n  }\n  function subtrair(x, y) {\n    return x - y;\n  }\n  function subtrair(x, y) {\n    return x - y;\n  }\n  function multiplicar(x, y) {\n    return x * y;\n  }\n  function dividir(x, y) {\n    return x / y;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CALCULADORA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"O reusltado da soma \\xE9: \", somar(n1, y)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"O resultado da subtra\\xE7\\xE3o \\xE9: \", subtrair(x, y)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"O resultado da multiplica\\xE7\\xE3o \\xE9: \", multiplicar(x, y)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"O resultado da divis\\xE3o \\xE9: \", dividir(x, y)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = FuncoesInternas;\nexport default FuncoesInternas;\n\n/*const FuncoesInternas = () => {\n    \n    let num1 = 15\n    let num2 = 10\n\n    // posso criar funções internas a outras funções\n    // também pode criar funções ARROW aqui dentro\n    function somar(x,y) {\n        return x + y\n    }\n\n    function subtrair(x,y) {\n        return x - y;\n    }\n\n    function multiplicar(x,y) {\n        return x * y;\n    }\n\n    function dividir(x,y) {\n        return x / y;\n    }\n\n    return (\n        //o que tiver dentro de {} ele vai interpretar como código javascript\n        <div>\n            <h1>Calculadora</h1>\n            <h3>O resultado da soma é: {somar(num1,num2)}</h3>\n            <h3>O resultado da subtração é: {subtrair(num1,num2)}</h3>\n            <h3>O resultado da multiplicação é: {multiplicar(num1,num2)}</h3>\n            <h3>O resultado da divisão é: {dividir(num1,num2).toFixed(2)}</h3>\n        </div>\n    )\n}\n\nexport default FuncoesInternas\n*/\nvar _c;\n$RefreshReg$(_c, \"FuncoesInternas\");","map":{"version":3,"names":["FuncoesInternas","n1","n2","somar","x","y","subtrair","multiplicar","dividir","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/wania/Documentos/web_2024_1/src/components/aulas/02FuncoesInternas/FuncoesInternas.js"],"sourcesContent":["const FuncoesInternas = () => {\n    \n    let n1 = 10\n    let n2 = 5\n\n    function somar(x,y){\n        return x + y\n    }\n\n    function subtrair(x,y){\n        return x - y \n    }\n\n    function subtrair(x,y){\n        return x - y\n    }\n\n    function multiplicar(x,y){\n        return x * y\n    }\n\n    function dividir(x,y){\n        return x / y\n    }\n    \n    return (\n        <div>\n            <h1>CALCULADORA</h1>\n            <h3>O reusltado da soma é: {somar(n1,y)}</h3>\n            <h3>O resultado da subtração é: {subtrair(x,y)}</h3>\n            <h3>O resultado da multiplicação é: {multiplicar(x,y)}</h3>\n            <h3>O resultado da divisão é: {dividir(x,y)}</h3>\n\n        </div>       \n    )\n}\n\nexport default FuncoesInternas\n\n/*const FuncoesInternas = () => {\n    \n    let num1 = 15\n    let num2 = 10\n\n    // posso criar funções internas a outras funções\n    // também pode criar funções ARROW aqui dentro\n    function somar(x,y) {\n        return x + y\n    }\n\n    function subtrair(x,y) {\n        return x - y;\n    }\n\n    function multiplicar(x,y) {\n        return x * y;\n    }\n\n    function dividir(x,y) {\n        return x / y;\n    }\n\n    return (\n        //o que tiver dentro de {} ele vai interpretar como código javascript\n        <div>\n            <h1>Calculadora</h1>\n            <h3>O resultado da soma é: {somar(num1,num2)}</h3>\n            <h3>O resultado da subtração é: {subtrair(num1,num2)}</h3>\n            <h3>O resultado da multiplicação é: {multiplicar(num1,num2)}</h3>\n            <h3>O resultado da divisão é: {dividir(num1,num2).toFixed(2)}</h3>\n        </div>\n    )\n}\n\nexport default FuncoesInternas\n*/"],"mappings":";;AAAA,MAAMA,eAAe,GAAGA,CAAA,KAAM;EAE1B,IAAIC,EAAE,GAAG,EAAE;EACX,IAAIC,EAAE,GAAG,CAAC;EAEV,SAASC,KAAKA,CAACC,CAAC,EAACC,CAAC,EAAC;IACf,OAAOD,CAAC,GAAGC,CAAC;EAChB;EAEA,SAASC,QAAQA,CAACF,CAAC,EAACC,CAAC,EAAC;IAClB,OAAOD,CAAC,GAAGC,CAAC;EAChB;EAEA,SAASC,QAAQA,CAACF,CAAC,EAACC,CAAC,EAAC;IAClB,OAAOD,CAAC,GAAGC,CAAC;EAChB;EAEA,SAASE,WAAWA,CAACH,CAAC,EAACC,CAAC,EAAC;IACrB,OAAOD,CAAC,GAAGC,CAAC;EAChB;EAEA,SAASG,OAAOA,CAACJ,CAAC,EAACC,CAAC,EAAC;IACjB,OAAOD,CAAC,GAAGC,CAAC;EAChB;EAEA,oBACII,OAAA;IAAAC,QAAA,gBACID,OAAA;MAAAC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBL,OAAA;MAAAC,QAAA,GAAI,4BAAuB,EAACP,KAAK,CAACF,EAAE,EAACI,CAAC,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7CL,OAAA;MAAAC,QAAA,GAAI,uCAA4B,EAACJ,QAAQ,CAACF,CAAC,EAACC,CAAC,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpDL,OAAA;MAAAC,QAAA,GAAI,2CAAgC,EAACH,WAAW,CAACH,CAAC,EAACC,CAAC,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3DL,OAAA;MAAAC,QAAA,GAAI,kCAA0B,EAACF,OAAO,CAACJ,CAAC,EAACC,CAAC,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhD,CAAC;AAEd,CAAC;AAAAC,EAAA,GAnCKf,eAAe;AAqCrB,eAAeA,eAAe;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}