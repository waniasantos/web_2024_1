{"ast":null,"code":"\n\n/*const FuncoesInternas = () => {\n    \n    let num1 = 15\n    let num2 = 10\n\n    // posso criar funções internas a outras funções\n    // também pode criar funções ARROW aqui dentro\n    function somar(x,y) {\n        return x + y\n    }\n\n    function subtrair(x,y) {\n        return x - y;\n    }\n\n    function multiplicar(x,y) {\n        return x * y;\n    }\n\n    function dividir(x,y) {\n        return x / y;\n    }\n\n    return (\n        //o que tiver dentro de {} ele vai interpretar como código javascript\n        <div>\n            <h1>Calculadora</h1>\n            <h3>O resultado da soma é: {somar(num1,num2)}</h3>\n            <h3>O resultado da subtração é: {subtrair(num1,num2)}</h3>\n            <h3>O resultado da multiplicação é: {multiplicar(num1,num2)}</h3>\n            <h3>O resultado da divisão é: {dividir(num1,num2).toFixed(2)}</h3>\n        </div>\n    )\n}\n\nexport default FuncoesInternas\n*/","map":{"version":3,"names":[],"sources":["/home/wania/Documentos/web_2024_1/src/components/aulas/02FuncoesInternas/FuncoesInternas.js"],"sourcesContent":["\n\n\n/*const FuncoesInternas = () => {\n    \n    let num1 = 15\n    let num2 = 10\n\n    // posso criar funções internas a outras funções\n    // também pode criar funções ARROW aqui dentro\n    function somar(x,y) {\n        return x + y\n    }\n\n    function subtrair(x,y) {\n        return x - y;\n    }\n\n    function multiplicar(x,y) {\n        return x * y;\n    }\n\n    function dividir(x,y) {\n        return x / y;\n    }\n\n    return (\n        //o que tiver dentro de {} ele vai interpretar como código javascript\n        <div>\n            <h1>Calculadora</h1>\n            <h3>O resultado da soma é: {somar(num1,num2)}</h3>\n            <h3>O resultado da subtração é: {subtrair(num1,num2)}</h3>\n            <h3>O resultado da multiplicação é: {multiplicar(num1,num2)}</h3>\n            <h3>O resultado da divisão é: {dividir(num1,num2).toFixed(2)}</h3>\n        </div>\n    )\n}\n\nexport default FuncoesInternas\n*/"],"mappings":";;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}